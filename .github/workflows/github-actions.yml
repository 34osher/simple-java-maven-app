name: GitHub Actions simple project
on: 
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
  pull_request:
    branches: [ master ]
jobs:
  build-and-test-maven:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: Increment patch version
        id: increment_version
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Current version: $CURRENT_VERSION"
          NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF++;print}')
          echo "New version: $NEW_VERSION"
          mvn versions:set -DnewVersion=$NEW_VERSION
          mvn versions:commit
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Commit and push version bump
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pom.xml
          git commit -m "Increment version to $NEW_VERSION [skip ci]"
          git push origin HEAD:master

      - name: Build docker images
        run: | 
          echo "---Building images and starting up docker---"
          docker build -t hello_app:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USER_DOCKERHUB }}
          password: ${{ secrets.PASS_DOCKERHUB }}

      - name: Continue delivery 
        run: | 
          echo "The new version is ${{ env.NEW_VERSION }}"
          docker tag hello_app:latest 34osher/hello_app:latest
          docker push 34osher/hello_app:latest
          docker tag hello_app:latest 34osher/hello_app:${{ env.NEW_VERSION }}
          docker push 34osher/hello_app:${{ env.NEW_VERSION }}
          docker images

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."


